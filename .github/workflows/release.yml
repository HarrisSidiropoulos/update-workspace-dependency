name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Use latest npm
        run: |
          npm -v
          npm i -g npm@latest
          npm -v

      - name: Check if running on GitHub-hosted runner
        run: |
          if [ -z "$RUNNER_TRACKING_ID" ]; then
            echo "Running on self-hosted runner"
            exit 1
          else
            echo "Running on GitHub-hosted runner"
          fi

      - name: Request OIDC token
        id: get-oidc-token
        run: |
          echo "TOKEN=$(curl -H 'Authorization: Bearer ${{ steps.get-oidc-token.outputs.token }}' https://token.actions.githubusercontent.com)" >> $GITHUB_ENV

      - name: Print token (debug only, remove later)
        run: echo ${{ steps.get-oidc-token.outputs.token }}

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Release (semantic-release with OIDC)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      - name: Verify npm publish via OIDC
        if: failure()
        run: |
          echo "If publish failed, ensure this repo is configured as an npm Trusted Publisher (OIDC) and the package name is owned or pre-authorized."
